<!--text scroll for show landing page of courses-->
<%= javascript_include_tag 'courses.js' %> 
<div id="crs-box">
	<h1 id="crs-name"><%=@course.name%></h1>
	<h3><%=link_to "Create New Challenge", new_course_challenge_path(@course,@challenge) if current_user && current_user.admin %></h3>
	<ul>
	<% @challenges.each do |challenge| %>
	  <li class="lesson-name"><%=link_to(challenge.title, course_challenge_path(@course, challenge), :class => "lesson-lnk") %></li>
	<%end%>
	</ul>
</div>
<% if @course.id == 1 %>
	<img id="jelly" src="/jelly.png">
	<div id="speech">
		<p class="desc">
			Down here in the deep blue, we refer to this coding language as JellyScript. However, you landlubbers may know it as <span class="hlite">Javascript</span>.
		</p>
		<p class="desc">
			<span class="hlite">JavaScript</span> is a powerful object-oriented programming language…
			<i>…object-what?</i>
		</p>
		<p class="desc">
			Object-oriented programming is a type of language that uses objects, which you create, to store methods and functions that act upon that object. For example, you could make a Fish object(note the capitalization, that will be important for later) and write methods that allow it to swim. You could write a swim left function so the fish can go left, and functions to help the fish swim right, up, down, and any other direction you may want it to go.
		</p>
		<p class="desc">
			But before we start writing functions, we need to learn some basics first!
		</p>
	</div>
<% else %>
	<img id="jelly" src="/dumbolg.png">
	<div id="speech">
		<p class="desc">
			 Ruby was created in 1995 by Yukihiro Matsumoto, and is in our opinion, a <i>gem</i> of a programming language. It was designed to be a language that is not only easy to write, but fun to use as well. 
		</p>
		<p class="desc">
			<span class="hlite">Ruby</span> is an object-oriented programming language... a programming language that uses objects to store methods and functions.  
		</p>
		<p class="desc">
			 Methods and Functions are pieces of code written by you, the programmer, to tell the computer what you want it to do. Let's say for example, that you want to make a whale sing. First you would need to create a Whale object(note the capitalization, that will be important for later). Inside of this object, you would write a method that tells the whale how to sing, and inside of this method a statement that tells it what to sing. 
					<ul class="desc">
			 			<li>class Whale<li>
			 				<ul>
								<li>def sing<li>
									<ul>
										<li>puts "Darling it's better, down where its wetter, under the sea!"</li>
									</ul>
								<li>end</li>
							</ul>
			 			<li>end</li>
			 		</ul class="desc">
		</p>

		<p class="desc">
			That was pretty easy, right? Try it out for yourself...
		</p>
	</div>
<% end %>